package frc.robot.subsystems;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.TalonSRX;
import com.fasterxml.jackson.databind.annotation.JsonAppend.Prop;

import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import frc.robot.Constants;
import frc.robot.RobotMap;

public class Climber extends SubsystemBase implements ISubsystem{
  //Left Motors
  private TalonSRX leftWinch;
  private TalonSRX leftArm;
  //Right Motors
  private TalonSRX rightWinch;
  private TalonSRX rightArm;
  

  private double leftEncoderValue; 
  private double rightEncoderValue;
  
  private double LastTimeStamp;
  private double ProportionalErrorMargin = 1;
  private double kP = 0.01;
  private double kI = 0.01;
  private double kD = 0.01;
  private double Setpoint;
  private double ErrorSum;
  private double LastError;
  /** Creates a new Climber. */
  public Innit() {
    ErrorSum = 0;
    LastTimeStamp = Timer.getFPGATimestamp();
    LastError = 0;
  }
  public void setAnAngle(double angle){
    Setpoint = angle;
  }
  @Override
  public void periodic() {
    leftEncoderValue = 1; //Get encoder values in degrees
    rightEncoderValue = 1;

    //Left Calculations
    double leftError = Setpoint - leftEncoderValue;
    double ldt = Timer.getFPGATimestamp() - LastTimeStamp;
    if(Math.abs(leftError)<ProportionalErrorMargin)
      ErrorSum += leftError * ldt;
    double lErrorRate = (leftError - LastError)/ldt;
    double leftOutputSpeed = kP * leftError + kI * ErrorSum + kD * lErrorRate;
    //Motors here
    //Time Update
    LastTimeStamp= Timer.getFPGATimestamp();
    LastError = leftError;
    
  }

  @Override
  public void outputSmartdashboard() {
    
  }

  @Override
  public void zeroSensors() {
    
  }

  @Override
  public void resetSubsystem() {
    
  }

  @Override
  public void testSubsystem() {
    
  }
}
